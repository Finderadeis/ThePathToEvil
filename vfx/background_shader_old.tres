[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D gradient: hint_black;
uniform float mix_amount = 1.0;
uniform float player_pos = 1.0;

uniform float particle_size = 0.5;
uniform float particle_count = 300.0;
uniform float particle_speed = 5.0;
uniform float color_mod = -0.1;

float N21(vec2 p) {
	vec3 a = fract(vec3(p.xyx) * vec3(213.897, 653.453, 253.098));
    a += dot(a, a.yzx + 79.76);
    return fract((a.x + a.y) * a.z);
}

vec2 N22(vec2 p){
    float n = N21(p);
    return vec2(n,N21(n+p));
}

vec3 Particle(vec2 res, vec2 uv){
	
	uv.x *= res.x/res.y;
	
	vec3 particle;
	for(float i=0.0; i<particle_count*player_pos; i+=1.0){
		vec2 rnd = N22(vec2(i,i*2.0));
		vec2 center = vec2(cos((TIME*rnd.x+i)/particle_speed)*2.0, sin((TIME*rnd.y+i)/particle_speed));
		float distToCenter = distance(uv, center);
		particle += vec3((particle_size)/distToCenter) * vec3(sin(TIME+i)/1.5+rnd.x);
	}
//	particle *= vec3(0.3,0.3,1.0);
	particle *= vec3(color_mod,color_mod,color_mod);
	return particle;
}

void fragment(){
	vec2 res = 1.0/SCREEN_PIXEL_SIZE;
//	vec2 uv = FRAGCOORD.xy/((res/2.0)-1.0);
	vec2 uv = FRAGCOORD.xy/res - 1.0;
	vec3 particles = Particle(res, uv);

	//fragColor = vec4(pointLight,1.0);

	vec4 input_color = texture(TEXTURE, UV);
	float greyscale_value = dot(input_color.rgb, vec3(0.299, 0.587, 0.114));
	vec3 sampled_color = texture(gradient, vec2(greyscale_value, 0.0)).rgb;
	
	vec3 gradient_mix = mix(input_color.rgb, sampled_color, player_pos*mix_amount);

	COLOR.rgb = mix(input_color.rgb, sampled_color, player_pos*mix_amount);
//	COLOR.rgb = mix(gradient_mix, particles, 0.4);
	COLOR.a = input_color.a;
}"

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0.103825, 0.286885, 0.489071, 0.734973 )
colors = PoolColorArray( 0, 0, 0, 1, 0.142518, 0.0275168, 0.207031, 1, 0.0878329, 0.285156, 0.262032, 1, 0.878191, 0.79193, 0.902344, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )
width = 256

[resource]
shader = SubResource( 1 )
shader_param/mix_amount = 0.7
shader_param/player_pos = 1.0
shader_param/particle_size = 0.02
shader_param/particle_count = 90.0
shader_param/particle_speed = 5.0
shader_param/color_mod = -0.1
shader_param/gradient = SubResource( 3 )
